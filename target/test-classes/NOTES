#####CUCUMBER KURULUMU#####
-Cucumber page object model icin olusturdugumuz klasorler:
    pages -> page object ler olusturulur
    runners -> test caseleri run etmek, raporlar eklemek, feature file ile stepdefinitions lari birlestirmek icin olusturulur
    stepdefinitions -> java code lari yazilir
    utilities -> reusable method lar, driver, ConfigReader gibi siniflar olusturulur
-Cucumber feature klasoru
    Tum feature file lar bu klasore gider
    Tum test case ler gherkin dilinde bu klasorde yazilir
-----------19 Subat 2023(Ilk ders)---------------
1. Feature file olustur
2. Runner class ini run et
3. Console dan missing step definitions lari kopyala
4. stepdefinitions klasorunde GoggleStepDefinitions class i olustur ve oraya yapistir
5. Step definitionslara gerekli java kodlarini yaz
NOTE: ELementleri bulmak icin page paketini kullan
---------Scenario Outline-----------------
#Scenario -> Scenario Outline
#"" -> "<sutun_ismi>"
#Examples kelimesi Scenario Outline dan sonra kullanilmali
#Examples verilerin kullanildagi yerdir
----------
Scenario Outline Data Driven Testing icin kullanilir
Yani benzer scenario yu tekrar tekrar farkli datalarda calistirmak icin kullanilir
Scenario Outline cucumber icin cok onemlidir.
Ne zaman birden fazla data ile islem yaparsak, o zaman scenario outline kullanabiliriz.
Scenario Outline Excel ile otomasyon yapmaya benzer, tek fark kullanimi daha kolaydir

#String lerde parametreli method için tırnak içine almamız gerekir
#Feature file'da yazdığımız case lerde sayı kullanırsak string'lerdeki gibi tırnak içine almadan parametreli method oluşturur

//**********************PARALLEL TEST*****************************
//Ilk asama: Ilk once maven yuklenir.
//1. Plugins leri pom.xml e ekle
//    *surefire ->
//    *failsafe ->
//    *cucumber-report -> extra renkli gelismis raporlar verir. Note: Bu parallel test icin degil rapor almak icin eklenir.
NOTE: Cucumber Reporting Linki :
https://mvnrepository.com/artifact/net.masterthought/cucumber-reporting
https://github.com/damianszczepanik/maven-cucumber-reporting
//2. Coklu runner class olustur. Bu runnerlar farkli scenario lari calistirsin
//    *SmokeTestRunner
//    *RegressionTestRunner
//    *TestRunner
//NOTE: Burda kullanilan tag lerden en az bir tanesi feature file da olmali. Aksi takdirde test bulunamaz.
//3. Terminal/Power Shell/CMD kullanarak, maven kodu ile testleri calistir:
//mvn clean verify
//mvn clean install

//NOTE: Bilgisayardaki terminal CMD ile testler ayni sekilde calistirilabilir
//Bu durumda projenin icine girmemiz gerekir:
//cd ABSOLUTE PATH
//cd /Users/techproed/IdeaProjects/batch103Cucumber     cd: change directory
//Note: zsh: command not found: mvn. => maven is not installed mvn -version Then you should see a version if maven is installed
//mvn -version calistirildiginda maven versiyonu gormuyorsaniz maven yuklu degildir, bu durumda oncelikle mvn yuklenmelidir.

//*******************SPARK REPORTS***********************************
//1.resources klasorunde extent-config.xml
//2.resources klasorunde extent.properties
//3. Spark report dependency pom a ekle: https://mvnrepository.com/artifact/tech.grasshopper/extentreports-cucumber7-adapter/1.6.0
//4. Spark report plugin i Runner a ekle; "com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter:"

